package Model;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

import Controller.Controller;

public class Astronaut {
	int stamina; // health, depletes till end of gameplay sequence
	int yLoc; //Astronaut's current y position
	int xLoc; // Astronaut's current x position
	boolean damaged; // Astronaut been hit - if true he is damaged
	boolean invincibility; // Astronaut cannot be hurt
	int position = 2; // 0 is farthest left, 0,1,2,3,4
	BufferedImage astro;
	Image astroImgfull;
	Image astroImg1_7;
	Image astroImg2_7;
	Image astroImg3_7;
	Image astroImg4_7;
	Image astroImg5_7;
	Image astroImg6_7;
	Image astroImgempty;
	Image dmgastroImgfull;
	Image dmgastroImg1_7;
	Image dmgastroImg2_7;
	Image dmgastroImg3_7;
	Image dmgastroImg4_7;
	Image dmgastroImg5_7;
	Image dmgastroImg6_7;
	Image dmgastroImgempty;

	public Astronaut(int stamina, int xLoc, int yLoc) {
		this.xLoc=xLoc;
		this.yLoc=yLoc;
		this.stamina = stamina;
	}
	public Image getAstroImg() 
	{
		if (this.damaged) {
			if (this.getStamina() <= 0)
				return Controller.getImgRes().getdmgastroImgempty();
			else if (this.getStamina() <= Controller.getStamina() /7)
				return Controller.getImgRes().getdmgastroImg1_7();
			else if (this.getStamina() <= Controller.getStamina() *2/7)
				return Controller.getImgRes().getdmgastroImg2_7();
			else if (this.getStamina() <= Controller.getStamina() *3/7)
				return Controller.getImgRes().getdmgastroImg3_7();
			else if (this.getStamina() <= Controller.getStamina() *4/7)
				return Controller.getImgRes().getdmgastroImg4_7();
			else if (this.getStamina() <= Controller.getStamina() *5/7)
				return Controller.getImgRes().getdmgastroImg5_7();
			else if (this.getStamina() <= Controller.getStamina() *6/7)
				return Controller.getImgRes().getdmgastroImg6_7();
			else  
				return Controller.getImgRes().getdmgastroImgfull();	
		}
		else {
			if (this.getStamina() <= 0)
				return Controller.getImgRes().getastroImgempty();
			else if (this.getStamina() <= Controller.getStamina() /7)
				return Controller.getImgRes().getastroImg1_7();
			else if (this.getStamina() <= Controller.getStamina() *2/7)
				return Controller.getImgRes().getastroImg2_7();
			else if (this.getStamina() <= Controller.getStamina() *3/7)
				return Controller.getImgRes().getastroImg3_7();
			else if (this.getStamina() <= Controller.getStamina() *4/7)
				return Controller.getImgRes().getastroImg4_7();
			else if (this.getStamina() <= Controller.getStamina() *5/7)
				return Controller.getImgRes().getastroImg5_7();
			else if (this.getStamina() <= Controller.getStamina() *6/7) 
				return Controller.getImgRes().getastroImg6_7();		
			else  
				return Controller.getImgRes().getastroImgfull();
		}
			
	}
	

	//When we get size compare y to that.
	public boolean collided(LaneObject o){
		if (o.xLoc==this.xLoc && o.yLoc==yLoc){
			Obstacle obstacle = (Obstacle) o;
			this.depleteStamina(obstacle.getStaminaPenalty());
			return true;
		}
		return false;
	}

	public int getStamina() {
		return this.stamina;
	}

	public int getPosition() {
		return this.position;
	}

	//Move left if you can move left (increment position down).
	public boolean moveLeft() {
		boolean moved = false;
		switch (position) {
		case 1:
			position = 0;
			moved = true;
			break;
		case 2:
			position = 1;
			moved = true;
			break;
		case 3:
			position = 2;
			moved = true;
			break;
		case 4:
			position = 3;
			moved = true;
			break;
		}
		return moved;
	}

	//Moves right (increments position) if you can move right.
	public boolean moveRight() {
		boolean moved = false;
		switch (position) {
		case 0:
			position = 1;
			moved = true;
			break;
		case 1:
			position = 2;
			moved = true;
			break;
		case 2:
			position = 3;
			moved = true;
			break;
		case 3:
			position = 4;
			moved = true;
			break;
		}
		return moved;
	}

	public void depleteStamina(int amount) {
		this.stamina -= amount;
	}
	public void setStamina(int amount) {
		this.stamina = amount;
	}

	public int getY() {
		return yLoc;
	}

	public void Damaged(boolean damage){
		if(damage){
			damaged = true;
		}
		else{
			damaged = false;
		}
	}

	public boolean getDamaged(){
		return damaged;
	}
	public void setYLoc(int y) {
		this.yLoc = y;
	}

}
